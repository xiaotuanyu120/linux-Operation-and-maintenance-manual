8、习题讲解收获&输入输出
2015年8月22日
21:05
 
# ===========================================
# 课后习题讲解
# ===========================================
1、参数传递时，要根据它的功能去明确名称
example：当我们传递一个文件object时，'fobj'优于'arg'、
 
2、参数及变量的命名要避开keywords
example：当你希望创建一个list去临时储存数据时，不要直接使用list这个keyword
 
3、实现简单功能时，尽量少用正则，优先使用python模块及函数
这样可以确保程序的可读性
 
4、函数模块不要过长，注意抽象的使用
 
 
 
# ===========================================
# MODULE: 'argparse' - CLASS: 'ArgumentParser'
# ===========================================# help信息
https://docs.python.org/2/howto/argparse.html#id1 
# simple example
# vi argp.py
************************************
import argparse
parser = argparse.ArgumentParser()
parser.add_argument("square", type=int, help="square an int")
args = parser.parse_args()
print args.square**2
************************************
 
# python argp.py -h
usage: argp.py [-h] spuare
 
positional arguments:
  spuare      square an int
 
# python argp.py 4
16
 
  
 
8.1 什么是输入输出
     
    信息  ->  程序  > 模块 > 函数  > 函数结果 -> 模块输出 / 文件输出  / 数据库输出  / 网络输出 / 环境变量
         
8.2 接受用户输入
 
     几种方式
     1. 通过sys.argv 接受命令行参数
 
     2. 程序中断 等待用户输入 raw_input
 
     3. 读取环境变量
          比如：开发环境和线上环境的分离
          __import__('dev_settings')
 
     4. 从文件读取  open('filename')
 
     5. 从网络读取 urllib.urlopen('http://baidu.com')
 
     6. 从数据库读取  con.query('select * from user_name')
 
 
 
8.3 输出内容
     
     1.  终端print
     
 
     持久化：
     2. 写文件
     
     3. 写网络
 
     4. 写数据库
 
     
8.4 格式化输出内容
     1. 字符串格式化
 
     2. 输出终端格式化
               pip install termcolor
               https://pypi.python.org/pypi/termcolor
 
     3. 模板的使用，暂且演示一下：
              第一种：string自带
>>> from string import Template
>>> s = Template('$who likes $what')
>>> s.substitute(who='tim', what='kung pao')
'tim likes kung pao'
 
Address:$address
Name:$Name
...               
 
 
第二种：使用模板引擎
 
                    
          http://jinja.pocoo.org/
 
 
8.5 读取文件
 
     几种模式详解
     
 
8.6 写入文件
 
     缓存
 
     flush
 
     close
 
 
练习：
1. 做一个简单的基于文本文件的学员管理系统，可以实现增删改查，文本文件格式：
     编号   姓名    性别  年龄   所在地    qq号
 
     增： 运行程序等待用户输入，用户输入"add"，让用户输入姓名，性别，年龄，所在地，qq号这些信息。
     查： 运行程序等待用户输入，用户输入"read", 让用户输入学员编号，查到之后输出给用户。
     删：运行程序等待用户输入，用户输入"delete", 让用户输入学员编号，查到之后输入给用户，然后输出是否删除的确认命令，确认后删除。
     改： 运行程序等待用户输入，用户输入"update", 让用户输入学员编号，进而输出学员信息，之后让用户填入新的内容（所有字段）
提示：可以把文件转换成Python中的结构
 
2. 写一个程序统计代码行数，可以统计信息包括：代码行数，注释行数（代码尾部的注释也算），空白行数。并以红，黄，蓝三种颜色分别输出。
 
     使用方法:  python collection.py  .  (指当前文件夹下所有的py文件）
     
 
3. 熟悉coding.net的使用
