10、异常
2015年9月10日
20:53
 
robust 鲁棒性
tuntimeerror 运行时错误
 
error VS exception
 
=================================================
前课补充
UML-Unified Modeling Language
定义：
uml是非专利的第三代建模和规约语言。UML是一种开放的方法，用于说明、可视化、构建和编写一个正在开发的、面向对象的、软件密集系统的制品的开放方法。UML展现了一系列最佳工程实践，这些最佳实践在对大规模，复杂系统进行建模方面，特别是在软件架构层次已经被验证有效。
 
UML集成了Booch，OMT和面向对象软件工程的概念，将这些方法融合为单一的，通用的，并且可以广泛使用的建模语言。UML打算成为可以对并发和分布式系统的标准建模语言。
 
WIKI：
https://zh.wikipedia.org/wiki/%E7%BB%9F%E4%B8%80%E5%BB%BA%E6%A8%A1%E8%AF%AD%E8%A8%80
 
GIT
DEFINE:
git是一个分布式版本控制系统，它强调速度，数据完整性，并支持非线性的工作流。作者是linux内核的开发者linus Torvalds。
 
流行的git实例
github gitcafe coding.net
PS：如果想自己搭建git server，推荐使用开源的gitlab（基于ruby）
 
10.1 为什么需要错误/异常处理
鲁棒性（robust健壮的）
没有完美的程序
程序员要知道代码可能出现的问题，并加以控制
 
10.2 Error
Syntax Error语法错误
RuntimeError运行时错误
 
10.3 Exception
 
处理异常
明确的捕获可能出现的异常，并做出反馈
 
抛出异常
当我们的底层程序发生异常，而上层程序并不需要关心具体的异常时，可用raise抛出指定异常
raise Exception
 
自定义异常
项目中集中管理错误及异常，可在各程序块中自行捕获异常并raise出指定格式的错误。
class UserError(Exception):
pass
 
定义清理动作
          finally clause可以帮助我们在异常发生后处理善后工作，例如文件的关闭等
 
详细例子：
https://docs.python.org/2.7/library/exceptions.html#exception-hierarchy
 
补充知识点：
 
序列化(json和pickle)
JSON-JavaScript Object Notation
DEFINE：
是一种轻量级的数据转换格式
 
常用操作：
json.dumps()
json.loads()
 
详细例子和用法:
https://docs.python.org/2/library/json.html
 
pickle跟json类似，但只限于python使用，不如json应用范围广泛
 
序列化概念补充：
序列化(Serialization)将对象的状态信息转换为可以存储或传输的形式的过程。在序列化期间，对象将其当前状态写入到临时或持久性存储区。以后，可以通过从存储区中读取或反序列化对象的状态，重新创建该对象。
序列化使其他代码可以查看或修改那些不序列化便无法访问的对象实例数据。确切地说，代码执行序列化需要特殊的权限：即指定了 SerializationFormatter 标志的 SecurityPermission。在默认策略下，通过 Internet 下载的代码或 Intranet 代码不会授予该权限；只有本地计算机上的代码才被授予该权限。
通常，对象实例的所有字段都会被序列化，这意味着数据会被表示为实例的序列化数据。这样，能够解释该格式的代码有可能能够确定这些数据的值，而不依赖于该成员的可访问性。类似地，反序列化从序列化的表示形式中提取数据，并直接设置对象状态，这也与可访问性规则无关。
对于任何可能包含重要的安全性数据的对象，如果可能，应该使该对象不可序列化。如果它必须为可序列化的，请尝试生成特定字段来保存不可序列化的重要数据。如果无法实现这一点，则应注意该数据会被公开给任何拥有序列化权限的代码，并确保不让任何恶意代码获得该权限。
 
使用类实现LRU (最近最少使用算法）
用dict实现缓存，疑问：数量最大值？可以设置过期吗？
 
作业还是把上节课的两个作业的代码放到coding.net上去。
 
